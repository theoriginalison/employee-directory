{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Card.js","components/SearchForm.js","components/EmployeeDetail.js","utils/API.js","components/EmployeeContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","fluid","children","Row","Col","size","split","map","join","Card","heading","SearchForm","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleFormSubmit","EmployeeDetail","alt","last","first","src","picture","medium","style","margin","phone","email","dob","date","axios","get","EmployeeContainer","state","result","filteredResult","search","getEmployees","API","then","res","console","log","setState","data","results","catch","err","searchEmployees","searchTerm","filteredPeople","filter","item","includes","event","target","preventDefault","sortByName","sortedNames","sort","a","b","bind","this","Title","person","index","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93bcdbf6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search For an Employee\"\n          id=\"search\"\n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction EmployeeDetail(props) {\n  return (\n    <>\n      <td><img alt={`${props.name.last}  ${props.name.first}`} className=\"img-fluid\" src={props.picture.medium} style={{ margin: \"0 auto\" }} /></td>\n      <td>{props.name.first} {props.name.last}</td>\n      <td>{props.phone}</td>\n      <td>{props.email}</td>\n      <td>{props.dob.date}</td>\n    </>\n  );\n}\n\nexport default EmployeeDetail;\n","import axios from \"axios\";\n\nconst URL = \"https://randomuser.me/api/?results=200&nat=us\";\n\nexport default {\n    search: function () {\n        return axios.get(URL);\n    }\n};","import React, { Component } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport EmployeeDetail from \"./EmployeeDetail\";\nimport API from \"../utils/API\";\n\nclass EmployeeContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.searchEmployees = this.searchEmployees.bind(this)\n  }\n  state = {\n    result: [],\n    filteredResult: [],\n    search: \"\"\n  };\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  getEmployees = () => {\n    API.search()\n      .then(res => {\n        console.log(res);\n        return this.setState({\n          result: res.data.results,\n          filteredResult: res.data.results\n        })\n      })\n      .catch(err => console.log(err));\n  };\n\n  searchEmployees = (searchTerm) => {\n    if (!this.state.search) {\n      this.setState({ filteredResult: this.state.result })\n      return\n    }\n    const filteredPeople = this.state.result.filter((item) => {\n      console.log(item);\n      return item.name.first.includes(this.state.search)\n        || item.name.last.includes(this.state.search)\n    })\n    this.setState({ filteredResult: filteredPeople })\n\n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchEmployees(this.state.search);\n  };\n\n  sortByName = () => {\n    let sortedNames = this.state.filteredResult.sort((a, b) => {\n      if (a.name.last < b.name.last) {\n        return -1;\n      }\n      if (a.name.last > b.name.last) {\n        return 1;\n      }\n      return 0;\n    },\n    );\n    this.setState({ filteredResult: sortedNames })\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-8\">\n            <Card\n              heading={this.state.result.Title || \"Search for an Employee here.\"}\n            >\n              <table>\n                <caption>Employees</caption>\n                <thead>\n                  <tr>\n                    <th>Image</th>\n                    <th><button onClick={this.sortByName}>Name</button></th>\n                    <th>Phone</th>\n                    <th>Email</th>\n                    <th>D.O.B.</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.filteredResult.map((person, index) => (\n                    <tr key={index}>\n                      <EmployeeDetail {...person} />\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n\n            </Card>\n          </Col>\n          <Col size=\"md-4\">\n            <Card heading=\"Search\">\n              <SearchForm\n                value={this.state.search}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default EmployeeContainer;\n","import React from \"react\";\nimport EmployeeContainer from \"./components/EmployeeContainer\";\n\nfunction App() {\n  return <EmployeeContainer />;\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}